version: "3"

services:
#  bot:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    container_name: bot
#    restart: always
#    env_file:
#      - .env
#    ports:
#      - ${WEBHOOK_PORT}:${WEBHOOK_PORT}
#    networks:
#      - app
#      - monitoring
#    depends_on:
#      - pgbouncer
#      - redis
#    volumes:
#      - ./bot:/usr/src/app/bot
#      - ./migrations:/usr/src/app/migrations
#

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - app
    volumes:
      - redis-data:/bitnami/redis/data
    #command: /bin/sh -c "redis-server --requirepass $${REDIS_PASS:?REDIS_PASS variable is not set}"
    #command:
    #  - 'redis-server'
    #  - '--requirepass myStrongPassword'

  # MONITORING
#  node-exporter:
#    image: prom/node-exporter:latest
#    container_name: node-exporter
#    restart: unless-stopped
#    ports:
#      - 9100:9100
#    networks:
#      - monitoring
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - "--path.procfs=/host/proc"
#      - "--path.sysfs=/host/sys"
#      - "--collector.filesystem.mount-points-exclude"
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

#  prometheus:
#    image: prom/prometheus:v2.43.0
#    container_name: prometheus
#    restart: unless-stopped
#    env_file:
#      - .env
#    ports:
#      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
#    depends_on:
#      - bot
#      - node-exporter
#    networks:
#      - monitoring
#    volumes:
#      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus-data:/prometheus
#    command:
#      - "--config.file=/etc/prometheus/prometheus.yml"
#      - "--storage.tsdb.path=/prometheus"
#      - "--web.console.libraries=/etc/prometheus/console_libraries"
#      - "--web.console.templates=/etc/prometheus/consoles"
#      - "--web.enable-lifecycle"
#
#  grafana:
#    image: grafana/grafana:8.5.22
#    container_name: grafana
#    restart: always
#    env_file:
#      - .env
#    environment:
#      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
#      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
#      - GF_INSTALL_PLUGINS=grafana-clock-panel
#    ports:
#      - ${GRAFANA_PORT}:${GRAFANA_PORT}
#    depends_on:
#      - prometheus
#    networks:
#      - monitoring
#    volumes:
#      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources
#      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards
#      - ./configs/grafana/node-exporter.json:/var/lib/grafana/dashboards/node-exporter.json
#      - grafana-data:/var/lib/grafana
#    user: "0"

networks:
  app:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  postgres-data: {}
  redis-data: {}
  prometheus-data: {}
  grafana-data: {}
